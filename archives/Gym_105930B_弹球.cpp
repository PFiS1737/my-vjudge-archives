// INFO: Tags : 平衡树
//        URL : https://vjudge.net/problem/Gym-105930B
//
// Description
// 二维平面上有两条水平线 y = 0 和 y = H。在这两条线之间，一开始有 n 块小木板，每块可以被看作一个点。第 i 块木板位于 (xi, yi)。
// 维护 q 次操作，操作有以下三种。
// • + x y：往平面上增加一块位于 (x, y) 的木板。
// • − x y：从平面上移除一块位于 (x, y) 的木板。
// • ? x y vy g：一颗弹球从 (x, y) 处被释放。
// 令 v = (vx, vy) 表示球的速度（也就是说，若球现在位于 (x, y)，它会在 t 秒后移动到(x + vx*t, y + vy*t)）。
// 若 g ≥ x 则 vx = 1，否则 vx = −1。 vy 已在询问中给出。vy 的值要么是 1 要么是 −1。
// 当球撞到一块木板或一条水平线时，vy 将会被反转（也就是说，vy 变为 −vy），而 vx 保持不变。
// 当弹球的 x 坐标为 g 时，求它的 y 坐标。
//
// Input
// 有多组测试数据。第一行输入一个整数 T（1 ≤ T ≤ 10^4）表示测试数据组数，对于每组测试数据：
// 第一行输入三个整数 H，n 和 q（2 ≤ H ≤ 10^9，1 ≤ n, q ≤ 10^5），表示位于上方的水平线的位置，初始的木板数量，以及操作的数量。
// 对于接下来 n 行，第 i 行输入两个整数 xi 和 yi（1 ≤ xi ≤ 109，1 ≤ yi < H），表示第 i 块木板的位置。
// 对于接下来 q 行，第 i 行首先输入一个字符 op（op ∈ {+, −, ?}）表示第 i 次操作的种类。
// • 若 op = + 则再输入两个整数 x 和 y（1 ≤ x ≤ 10^9，1 ≤ y < H），表示要添加木板的位置。保证当前没有木板位于 (x, y)。
// • 若 op = − 则再输入两个整数 x 和 y（1 ≤ x ≤ 10^9，1 ≤ y < H），表示要移除的木板的位置。保证当前有一块木板位于 (x, y)。
// • 若 op = ? 则再输入四个整数 x，y，vy 和 g（1 ≤ x, g ≤ 10^9，1 ≤ y < H，vy ∈ {−1, 1}），表示弹球的初始位置，
//   弹球沿 y 轴方向的初始速度以及目标位置的 x 坐标。保证当前没有木板位于(x, y)。
// 保证所有数据 n 之和与 q 之和均不超过 2 × 10^5。
//
// Output
// 每次第三种操作输出一行一个整数表示答案。
//
// HACK: Solution
// 代码题。
// 把在同一条路径上的木板上下表面连起来，看作一个链表。
// 放入和删除木板就是拆分已有的链表再合并，询问弹球位置就是问某一条路径上 x = g 时的 y 坐标。
// 用平衡树维护有序链表的拆分、合并、查询即可。
// 复杂度 O((n + q)log(n + q))。
//
// NOTE: 题解看不懂一点 :(
//
// TODO:

// Sample Input
// 3
// 5 2 8
// 4 2
// 6 4
// ? 10 4 -1 3
// + 8 2
// ? 3 3 -1 12
// ? 3 1 1 12
// - 4 2
// ? 3 3 -1 12
// ? 3 1 1 12
// ? 7 3 1 6
// 10 1 2
// 5 5
// ? 9 2 1 9
// ? 9 2 -1 9
// 1 0 1
// ? 0 0 1 1000000000

// Sample Output
// 1
// 4
// 2
// 2
// 4
// 4
// 2
// 2
// 0
