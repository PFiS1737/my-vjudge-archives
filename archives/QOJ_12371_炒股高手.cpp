// INFO: Tags : 差分 前缀和
//        URL : https://vjudge.net/problem/QOJ-12371
//
// 题目描述
// 小 A 立志成为一名炒股高手。经过长时间的学习，他自信已掌握了丰富的理论知识，并精心挑选出了一支股票，决定在接下来的 n 个交易日内进行实战操作。
// 股票之神向小 A 投来了注视，他帮你预知了接下来 n 个交易日中这只股票的股价。由于股票之神擅长数学，所有价格均以自然对数的形式给出。
// 也就是说，在第 i 天（1 ≤ i ≤ n），会得到一个正整数 ai ，表示当天该股票的价格为 e^ai 元。需要注意的是，在本题中，小 A 可以购买非整数份的股票。
// 由于手头资金有限，小 A 决定公开向他人借款，称为"鸡债"。为了方便管理和收益核算，他规定每位出借人均提供固定的 e^k 元借款。
// 在这 n 天内，共有 m 位出借人愿意向小 A 提供鸡债。
// 对于第 i 位出借人，他会在第 si 天开盘前向小 A 提供 e^k 元，在第 t 天收盘后要求结算收益。
// 在这段时间内，小 A 可自由使用这笔资金进行任意次数的买入与卖出操作。
// 你的任务是：对于每一笔鸡债，计算小 A 在最优操作下所能获得的最终总资产（即本金加收益）的自然对数值 k，并输出该整数。
// 换句话说，若小 A 最终通过操作将手中 e^k 元变为 e^w 元，则你应输出该整数 w。
//
// 输入格式
// 第一行包含两个正整数 n（1 ≤ n ≤ 10^5）和 m（1 ≤ m ≤ 10^5），分别表示交易日的数量以及鸡债的数量。
// 第二行包含 n 个正整数 a1, a2, ..., an（ 1 ≤ ai ≤ 10^4），其中第 i 天的股票价格为e^ai。
// 第三行包含一个正整数 k（1 ≤ k ≤ 10^9），表示每份鸡债提供的借款金额为e^k。
// 接下来 m 行，每行包含两个整数 si 和 ti（1 ≤ si ≤ ti ≤ n），表示第 i 份鸡债的借款开始日和收益结算日。
//
// 输出格式
// 输出共 m 行，每行一个正整数 wi，表示第 i 份鸡债的本金加收益总额为 e^wi 元。
//
// HACK: 题解
// 见注释
//
// INFO: Memory : ~4.6 MB
//         Time : ~70 ms

// Sample Input
// 8 1
//
// 2
// 1 8

// Sample Output
// 5
// 5

#include <iostream>
#include <vector>
using namespace std;

int main() {
  int n, m;
  cin >> n >> m;

  vector<int> a(n + 1), d(n + 1, 0), sum(n + 1, 0);
  for (int i = 1; i <= n; i++) {
    cin >> a[i];

    if (i > 1) {
      // HACK: 如果后一天股价比前一天高，我们总是可以在前一天卖出，再在后一天买入，
      //       我们维护一个差分数组来统计这样做的收益，
      //       注意差分数组最小为 0，意味着如果后一天股价比前一天低，我们不进行交易。
      d[i] = max(0, a[i] - a[i - 1]);

      // HACK: 另外，我们再维护这个差分数组的前缀和数组来方便查表
      sum[i] = sum[i - 1] + d[i];
    }
  }

  int k;
  cin >> k;

  while (m--) {
    int s, t;
    cin >> s >> t;

    // NOTE: 每次询问输出本金 + 收益，直接查表即可
    cout << k + sum[t] - sum[s] << endl;
  }

  return 0;
}
