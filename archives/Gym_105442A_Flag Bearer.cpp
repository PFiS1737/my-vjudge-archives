// INFO: Tags : 模拟
//        URL : https://vjudge.net/problem/Gym-105442A
//
// INFO: Memory : ~100 kB
//         Time : ~77 ms

// Sample Input
// 2
// 5 9
// .........
// .........
// .........
// .........
// .###*....
// .....#...
// ......#..
// .......#.
// .........
// .........
// .......#.
// ......#..
// .....#...
// ....*....
// ...#.....
// ..#......
// .#.......
// .........
// .........
// .......#.
// ......#..
// .....#...
// ....*....
// ....#....
// ....#....
// ....#....
// .........
// .........
// .......#.
// ......#..
// .....#...
// ....*....
// ....#....
// ....#....
// ....#....
// .........
// .........
// ....#....
// ....#....
// ....#....
// .###*....
// .........
// .........
// .........
// .........
// 5 17
// .........
// .........
// .........
// .........
// ....*....
// ...##....
// ..#.#....
// .#..#....
// .........
// .........
// .........
// .........
// .........
// .###*###.
// .........
// .........
// .........
// .........
// .........
// .......#.
// ......#..
// .....#...
// ....*....
// ....#....
// ....#....
// ....#....
// .........
// .........
// .........
// .........
// .........
// ....*....
// ...#.#...
// ..#...#..
// .#.....#.
// .........
// .........
// .........
// .........
// .........
// ....*....
// ...##....
// ..#.#....
// .#..#....
// .........

// Sample Output
// .........
// .........
// .........
// .........
// .###*....
// ....#....
// ....#....
// ....#....
// .........
// .........
// .#.....#.
// ..#...#..
// ...#.#...
// ....*....
// .........
// .........
// .........
// .........
// .........
// .........
// .........
// .........
// ....*....
// ...#.#...
// ..#...#..
// .#.....#.
// .........
// .........
// .........
// .........
// .........
// ....*....
// ...#.#...
// ..#...#..
// .#.....#.
// .........
// .........
// .#.......
// ..#......
// ...#.....
// ....*###.
// .........
// .........
// .........
// .........
// .........
// .........
// .........
// .........
// .###*###.
// .........
// .........
// .........
// .........
// .........
// .#.......
// ..#......
// ...#.....
// ....*....
// ...#.....
// ..#......
// .#.......
// .........
// .........
// ....#....
// ....#....
// ....#....
// ....*....
// .....#...
// ......#..
// .......#.
// .........
// .........
// .......#.
// ......#..
// .....#...
// ....*....
// ....#....
// ....#....
// ....#....
// .........
// .........
// .........
// .........
// .........
// .###*###.
// .........
// .........
// .........
// .........

#include <iostream>
#include <map>
#include <vector>
using namespace std;

int dx[] = {-1, -1, -1, 0, 0, 0, 1, 1, 1};
int dy[] = {-1, 0, 1, -1, 0, 1, -1, 0, 1};

map<pair<int, int>, char> imap = {
  {{7, 6}, 'a'}, {{7, 3}, 'b'}, {{7, 0}, 'c'}, {{7, 1}, 'd'}, {{7, 2}, 'e'},
  {{7, 5}, 'f'}, {{8, 7}, 'g'}, {{6, 3}, 'h'}, {{6, 0}, 'i'}, {{5, 1}, 'j'},
  {{6, 1}, 'k'}, {{6, 2}, 'l'}, {{6, 5}, 'm'}, {{8, 6}, 'n'}, {{3, 0}, 'o'},
  {{3, 1}, 'p'}, {{3, 2}, 'q'}, {{5, 3}, 'r'}, {{8, 3}, 's'}, {{1, 0}, 't'},
  {{2, 0}, 'u'}, {{8, 1}, 'v'}, {{5, 2}, 'w'}, {{8, 2}, 'x'}, {{5, 0}, 'y'},
  {{8, 5}, 'z'},
};
map<char, pair<int, int>> umap;

char read() {
  vector<string> s(9);
  for (auto &s : s)
    cin >> s;

  // NOTE: 根据中间 3x3 的 # 的位置区分不同的字符
  pair<int, int> p = {-1, -1};
  for (int i = 0; i < 9; i++) {
    if (s[4 + dx[i]][4 + dy[i]] == '#') {
      if (p.first == -1)
        p.first = i;
      else
        p.second = i;
    }
  }

  if (p.second > p.first)
    swap(p.second, p.first);

  return imap[p];
}

void write(char x) {
  vector<string> s(9, ".........");
  s[4][4] = '*';

  pair<int, int> p = umap[x];

  for (int i = 0; i < 9; i++) {
    if (p.first == i || p.second == i) {
      for (int k = 1; k < 4; k++) {
        s[4 + dx[i] * k][4 + dy[i] * k] = '#';
      }
    }
  }

  for (auto s : s)
    cout << s << endl;
}

void solve() {
  int n, m;
  cin >> n >> m;
  while (n--)
    write('a' + (read() - 'a' + m) % 26);
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  for (auto p : imap)
    umap[p.second] = p.first;

#ifdef LOCAL_JUDGE
  int T;
  cin >> T;
  while (T--)
#endif
    solve();
  return 0;
}
